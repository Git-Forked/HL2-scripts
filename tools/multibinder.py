# RAB's Multi-binder Creation Helper Script in Python 3.x

# Objectives
# 1:  Import and read a text file as lines
# 2:  Convert lines to ordered aliases including a bind next
# 3:  Export to cfg file using a unique name

# Configure:

# Import from this file:  file in same folder as script, or /path/filename
inputFile = "retort.txt"

# Export to this file:
outputFile = "output.cfg"

# Keyword to use as the alias
aliasKeyWord = "retort"

# Key to bind to
bindToKey = "kp_uparrow"

# No Configuration Below:

# Open the file as read only and store its content in memory
with open(inputFile, "r") as file:
    content = file.read();
file.closed

# Convert content to a list of lines
lines = content.split("\n")

# Print to console
print ("// This was generated by RAB's Multi-binder Creation Helper Script in Python 3.x :  (see /tools/multibinder.py)")
for i in range(len(lines)):
    # Ignore blank lines
    if lines[i] != "":
        #print (len(lines)-1)
        if int(i) >= int(len(lines)-2):
            # alternate for last line
            print ("alias " + aliasKeyWord+str(i+1) + " \"say " + lines[i] + ";bind " + bindToKey + " " + aliasKeyWord+"1" + "\"")
        else:
            # all other lines but last line
            print ("alias " + aliasKeyWord+str(i+1) + " \"say " + lines[i] + ";bind " + bindToKey + " " + aliasKeyWord+(str(i+2)) + "\"")

print ("bind " + bindToKey + " " + aliasKeyWord+"1")

# Export to a cfg file
with open(outputFile, "w") as file:
    file.write ("// This was generated by RAB's Multi-binder Creation Helper Script in Python 3.x :  (see /tools/multibinder.py)\n")
    for i in range(len(lines)):
        # Ignore blank lines
        if lines[i] != "":
            #print (len(lines)-1)
            if int(i) >= int(len(lines)-2):
                # alternate for last line
                file.write ("alias " + aliasKeyWord+str(i+1) + " \"say " + lines[i] + ";bind " + bindToKey + " " + aliasKeyWord+"1" + "\"\n")
            else:
                # all other lines but last line
                file.write ("alias " + aliasKeyWord+str(i+1) + " \"say " + lines[i] + ";bind " + bindToKey + " " + aliasKeyWord+(str(i+2)) + "\"\n")

    file.write ("bind " + bindToKey + " " + aliasKeyWord+"1")
file.closed
